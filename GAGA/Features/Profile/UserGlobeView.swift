//
//  UserGlobeView.swift
//  GAGA
//
//  Created by AI on 2025/10/09.
//

import SwiftUI

struct UserGlobeView: View {
    let userId: String
    @State private var photos: [String: Photo] = [:]
    @State private var selectedCountry: Country?
    @State private var selectedPhoto: Photo?
    @State private var showPhotoDetail = false

    var body: some View {
        ZStack {
            GlobeView(
                selectedCountry: $selectedCountry,
                selectedPhoto: $selectedPhoto,
                showPhotoDetail: $showPhotoDetail,
                photos: photos
            )

            if photos.isEmpty {
                VStack {
                    Image(systemName: "photo.badge.plus")
                        .font(.system(size: 60))
                        .foregroundColor(.black.opacity(0.3))
                    Text("ÂÜôÁúü„ÇíÊäïÁ®ø„Åó„Å¶\nÂú∞ÁêÉ„ÇíÂüã„ÇÅ„Çà„ÅÜ")
                        .multilineTextAlignment(.center)
                        .foregroundColor(.black.opacity(0.5))
                        .padding()
                }
            }

            // Invisible NavigationLink for photo detail
            NavigationLink(
                destination: selectedPhoto.map { photo in
                    PhotoDetailView(photo: photo, onDelete: {
                        // ÂâäÈô§ÊôÇ„ÅÆÂá¶ÁêÜÔºöÂÜôÁúü„É™„Çπ„Éà„ÇíÂÜçË™≠„ÅøËæº„Åø
                        Task {
                            await loadUserPhotos()
                        }
                    })
                },
                isActive: $showPhotoDetail
            ) {
                EmptyView()
            }
            .hidden()
        }
        .task {
            await loadUserPhotos()
        }
    }

    private func loadUserPhotos() async {
        do {
            let userPhotos = try await FirebaseService.shared.getPhotos(for: userId)
            print("üì∏ Loaded \(userPhotos.count) photos for user profile")

            // ÂõΩ„Ç≥„Éº„Éâ„Çí„Ç≠„Éº„Å®„Åó„Åü„Éá„Ç£„ÇØ„Ç∑„Éß„Éä„É™„Å´Â§âÊèõÔºàÂêÑÂõΩÊúÄÊñ∞„ÅÆ1Êûö„ÅÆ„ÅøÔºâ
            var photosDict: [String: Photo] = [:]
            for photo in userPhotos {
                // Êó¢Â≠ò„ÅÆÂÜôÁúü„Åå„Å™„ÅÑ„ÄÅ„Åæ„Åü„ÅØÊñ∞„Åó„ÅÑÂÜôÁúü„ÅÆÂ†¥Âêà„ÅÆ„ÅøÊõ¥Êñ∞
                if photosDict[photo.countryCode] == nil ||
                   photo.createdAt > photosDict[photo.countryCode]!.createdAt {
                    photosDict[photo.countryCode] = photo
                }
            }

            // „É°„Ç§„É≥„Çπ„É¨„ÉÉ„Éâ„ÅßÊõ¥Êñ∞
            await MainActor.run {
                self.photos = photosDict
                print("‚úÖ Updated profile globe with \(photosDict.count) countries")
            }
        } catch {
            print("‚ùå Failed to load photos: \(error)")
        }
    }
}

#Preview {
    UserGlobeView(userId: "test-user-id")
}
